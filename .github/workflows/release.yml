name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v*

jobs:
  release:
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              os: ubuntu-latest,
              target: x86_64-unknown-linux-gnu,
              use-cross: false,
              extension: "",
            }
          - {
              os: ubuntu-latest,
              target: x86_64-unknown-linux-musl,
              use-cross: true,
              extension: "",
            }
          - {
              os: ubuntu-latest,
              target: armv7-unknown-linux-gnueabihf,
              use-cross: true,
              extension: "",
            }
          - {
              os: ubuntu-latest,
              target: armv7-unknown-linux-musleabihf,
              use-cross: true,
              extension: "",
            }
          - {
              os: ubuntu-latest,
              target: aarch64-unknown-linux-gnu,
              use-cross: true,
              extension: "",
            }
          - {
              os: ubuntu-latest,
              target: aarch64-unknown-linux-musl,
              use-cross: true,
              extension: "",
            }
          - {
              os: macos-latest,
              target: x86_64-apple-darwin,
              use-cross: false,
              extension: "",
            }
          - {
              os: macos-latest,
              target: aarch64-apple-darwin,
              use-cross: false,
              extension: "",
            }
          - {
              os: windows-latest,
              target: x86_64-pc-windows-msvc,
              use-cross: false,
              extension: .exe,
            }
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract crate information
        shell: bash
        run: |
          echo "PROJECT_NAME=$(sed -n 's/^name = "\(.*\)"/\1/p' Cargo.toml | head -n1)" >> $GITHUB_ENV

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}
          override: true
          profile: minimal

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.job.use-cross }}
          command: build
          args: --release --target ${{ matrix.job.target }}

      - name: Rename artifacts
        shell: bash
        run: |
          mv target/${{ matrix.job.target }}/release/${{ env.PROJECT_NAME }}{,-${{ github.ref_name }}-${{ matrix.job.target }}${{ matrix.job.extension }}}
      - name: Upload release asset
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PROJECT_NAME }}-${{ github.ref_name }}-${{ matrix.job.target }}${{ matrix.job.extension }}
          path: target/${{ matrix.job.target }}/release/${{ env.PROJECT_NAME }}-${{ github.ref_name }}-${{ matrix.job.target }}${{ matrix.job.extension }}

  homebrew-release:
    runs-on: ubuntu-latest
    needs:
      - release
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              os: ubuntu-latest,
              target: x86_64-unknown-linux-gnu,
              use-cross: false,
              extension: "",
            }
          - {
              os: ubuntu-latest,
              target: x86_64-unknown-linux-musl,
              use-cross: true,
              extension: "",
            }
          - {
              os: ubuntu-latest,
              target: armv7-unknown-linux-gnueabihf,
              use-cross: true,
              extension: "",
            }
          - {
              os: ubuntu-latest,
              target: armv7-unknown-linux-musleabihf,
              use-cross: true,
              extension: "",
            }
          - {
              os: ubuntu-latest,
              target: aarch64-unknown-linux-gnu,
              use-cross: true,
              extension: "",
            }
          - {
              os: ubuntu-latest,
              target: aarch64-unknown-linux-musl,
              use-cross: true,
              extension: "",
            }
          - {
              os: macos-latest,
              target: x86_64-apple-darwin,
              use-cross: false,
              extension: "",
            }
          - {
              os: macos-latest,
              target: aarch64-apple-darwin,
              use-cross: false,
              extension: "",
            }
          - {
              os: windows-latest,
              target: x86_64-pc-windows-msvc,
              use-cross: false,
              extension: .exe,
            }
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract crate information
        shell: bash
        run: |
          echo "PROJECT_NAME=$(sed -n 's/^name = "\(.*\)"/\1/p' Cargo.toml | head -n1)" >> $GITHUB_ENV

      - name: Homebrew Release
        uses: Justintime50/homebrew-releaser@v2.0.0
        with:
          homebrew_owner: crcrworks
          homebrew_tap: homebrew-tap
          formula_folder: Formula
          github_token: ${{ secrets.TAP_GITHUB_TOKEN }}
          commit_owner: crcrworks
          commit_email: crcr.works@gmail.com
          target_darwin_amd64: true
          target_darwin_arm64: true
          target_linux_amd64: true
          target_linux_arm64: true
          install: |
            bin.install "{{ env.PROJECT_NAME }}-${{ github.ref_name }}-aarch64-apple-darwin" => "{{ env.PROJECT_NAME }}"
            bin.install "{{ env.PROJECT_NAME }}-${{ github.ref_name }}-x86_64-apple-darwin" => "{{ env.PROJECT_NAME }}"
